# Specialized Brand Dimension Tasks - run in parallel for efficiency

north_star_task:
  description: >
    Evaluate North Star & Vision alignment between the job posting and the candidate's long-term career goals.

    JOB POSTING TO EVALUATE:
    {job_posting}

    YOUR KNOWLEDGE SOURCES contain the candidate's North Star vision, including:
    - Long-term career aspirations and desired impact
    - Vision for where they want to be in 5-10 years
    - Type of problems they want to solve
    - Leadership or technical trajectory preferences

    COMPARE this against the job posting's:
    - Company mission and vision
    - Growth potential and career progression
    - Impact and scope of the role
    - Long-term opportunities

    SCORING: 1=Critical mismatch, 2=Insufficient data/hesitation, 3=Acceptable, 4=Good match, 5=Exceptional fit.
    OUTPUT: Must strictly match BrandDimensionAnalysis with {"score": <1-5>, "summary": "<1-3 concise sentences, max 60 words>"}.
    Reference specific career goals from knowledge sources in your reasoning.
  expected_output: BrandDimensionAnalysis
  agent: north_star_matcher
  async_execution: true

trajectory_mastery_task:
  description: >
    Evaluate Trajectory & Mastery alignment between the job's skill requirements and the candidate's development goals.

    JOB POSTING TO EVALUATE:
    {job_posting}

    YOUR KNOWLEDGE SOURCES contain the candidate's trajectory and mastery goals, including:
    - Desired skill development path and technical growth areas
    - Expertise domains they want to deepen
    - Learning and mastery objectives
    - Technical or leadership trajectory preferences

    COMPARE this against the job posting's:
    - Required and preferred skills
    - Technical challenges and complexity
    - Learning opportunities and skill development
    - Growth potential in desired expertise areas

    SCORING: 1=Skills mismatch/no growth, 2=Insufficient data, 3=Acceptable fit, 4=Good growth path, 5=Exceptional development opportunity.
    OUTPUT: Must strictly match BrandDimensionAnalysis with {"score": <1-5>, "summary": "<1-3 concise sentences, max 60 words>"}.
    Reference specific skills or trajectory goals from knowledge sources in your reasoning.
  expected_output: BrandDimensionAnalysis
  agent: trajectory_mastery_matcher
  async_execution: true

values_compass_task:
  description: >
    Evaluate Values Compass alignment between company culture and the candidate's core values.

    JOB POSTING TO EVALUATE:
    {job_posting}

    YOUR KNOWLEDGE SOURCES contain the candidate's values and cultural preferences, including:
    - Core values and principles
    - Preferred team dynamics and collaboration styles
    - Cultural attributes that matter most
    - Work environment preferences

    COMPARE this against the job posting's:
    - Company values and culture statements
    - Team structure and collaboration approach
    - Work environment and organizational culture
    - Cultural indicators from job description

    SCORING: 1=Values conflict, 2=Insufficient cultural data, 3=Acceptable culture, 4=Good values match, 5=Exceptional cultural fit.
    OUTPUT: Must strictly match BrandDimensionAnalysis with {"score": <1-5>, "summary": "<1-3 concise sentences, max 60 words>"}.
    Reference specific values from knowledge sources when explaining alignment.
  expected_output: BrandDimensionAnalysis
  agent: values_compass_matcher
  async_execution: true

lifestyle_alignment_task:
  description: >
    JOB POSTING TO EVALUATE:
    {job_posting}

    YOUR KNOWLEDGE SOURCES contain: work-life balance preferences, schedule flexibility needs, PTO expectations, workload preferences.
    COMPARE against: work schedule, flexibility, PTO policy, on-call expectations, work intensity in the job posting.
    SCORING: 1=Lifestyle conflict, 2=Insufficient data, 3=Acceptable balance, 4=Good fit, 5=Exceptional alignment.
    OUTPUT: {"score": <1-5>, "summary": "<1-3 sentences, max 60 words>"}.
  expected_output: BrandDimensionAnalysis
  agent: lifestyle_alignment_matcher
  async_execution: true

compensation_philosophy_task:
  description: >
    JOB POSTING TO EVALUATE:
    {job_posting}

    YOUR KNOWLEDGE SOURCES contain: salary expectations, equity preferences, benefits priorities, total compensation philosophy.
    COMPARE against: salary range, equity offering, benefits package, total compensation structure in the job posting.
    SCORING: 1=Below expectations, 2=Insufficient data, 3=Meets baseline, 4=Competitive package, 5=Exceptional compensation.
    OUTPUT: {"score": <1-5>, "summary": "<1-3 sentences, max 60 words>"}.
  expected_output: BrandDimensionAnalysis
  agent: compensation_philosophy_matcher
  async_execution: true

# TLDR Summary task for quick human review
tldr_summary_task:
  description: >
    Create a concise 10-20 second scannable summary of the job posting.

    JOB POSTING TO ANALYZE:
    {job_posting}

    REQUIREMENTS:
    - 3-5 short bullet points OR one brief paragraph
    - Focus ONLY on role, key requirements, and seniority
    - Avoid company culture, benefits, or generic phrases
    - Plain language, actionable information
    - Maximum 1-3 sentences or 3-5 bullets

    OUTPUT: Must return valid JSON matching TldrSummary with exactly one field:
    {"tldr_summary": "<your concise summary here>"}
  expected_output: TldrSummary
  agent: tldr_summarizer
  async_execution: true

# Manager task that SYNTHESIZES specialist results AND CALCULATES SCORE
brand_match_task:
  description: >
    SYNTHESIS TASK: Combine results from 5 specialist agents AND calculate overall_alignment_score.

    YOUR JOB:
    1. Verify all 5 specialist results are included in context (north_star, trajectory_mastery, values_compass, lifestyle_alignment, compensation_philosophy).
    2. Calculate overall_alignment_score using:
       - Convert each 1-5 specialist score to 0-10 scale: score_0_10 = 2 + (score_1_5 - 1) * 2
       - Apply weights: compensation_philosophy: 30%, trajectory_mastery: 30%, north_star: 20%, values_compass: 15%, lifestyle_alignment: 5%
       - overall_alignment_score = round(weighted_average, 2)
    3. Assign confidence level based on overall_alignment_score: low (<=4.0), medium (4.0-6.0), high (>6.0).
    4. Set recommend = true if overall_alignment_score >= 5.0, false otherwise.
    5. Write a concise overall_summary (5–7 sentences, ≤150 words).
    6. Output the complete BrandMatchComplete JSON.

    OUTPUT: Complete and valid BrandMatchComplete JSON only.
    - ALL required fields must be explicitly included: overall_alignment_score (float), recommend (bool), confidence (string), overall_summary (string), plus all 5 dimension results (north_star, trajectory_mastery, values_compass, lifestyle_alignment, compensation_philosophy).
    - Calculate overall_alignment_score using the specified algorithm and include it as a numeric field (e.g., 5.2) in the JSON. The number must not be quoted.
    - RESPONSE FORMAT (fill in the summaries with full sentences):
      {
        "north_star": {"score": <1-5>, "summary": "..."},
        "trajectory_mastery": {"score": <1-5>, "summary": "..."},
        "values_compass": {"score": <1-5>, "summary": "..."},
        "lifestyle_alignment": {"score": <1-5>, "summary": "..."},
        "compensation_philosophy": {"score": <1-5>, "summary": "..."},
        "overall_alignment_score": <float rounded to two decimals>,
        "overall_summary": "...",
        "recommend": <true|false>,
        "confidence": "<low|medium|high>"
      }
    - Do not omit the overall_alignment_score field - it must appear exactly once in the JSON structure and reflect the weighted calculation.
    - Do not add extra fields.
    - Do not produce free text outside JSON.
  expected_output: BrandMatchComplete
  agent: brand_match_manager
  # Context handled in Python for reliability
